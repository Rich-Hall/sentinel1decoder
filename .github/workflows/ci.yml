name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build Docker Container
      run: docker build -t sentinel1-dev .

    - name: Save Docker Image as Artifact
      run: docker save sentinel1-dev | gzip > sentinel1-dev.tar.gz

    - name: Upload Docker Image Artifact
      uses: actions/upload-artifact@v4
      with:
        name: sentinel1-dev-image
        path: sentinel1-dev.tar.gz

  lint-and-precommit:
    needs: build-container
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download Docker Image Artifact
      uses: actions/download-artifact@v4
      with:
        name: sentinel1-dev-image

    - name: Load Docker Image
      run: gunzip -c sentinel1-dev.tar.gz | docker load

    - name: Run Pre-commit Checks in Docker
      run: docker run --rm sentinel1-dev pre-commit run --all-files --show-diff-on-failure

  run-tests:
    needs: build-container
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Download Docker Image Artifact
      uses: actions/download-artifact@v4
      with:
        name: sentinel1-dev-image

    - name: Load Docker Image
      run: gunzip -c sentinel1-dev.tar.gz | docker load

    - name: Run Tests in Docker
      run: docker run --rm sentinel1-dev pytest tests/ -v

  build-package:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
        rust-version: ['1.70.0', 'stable']
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up Rust ${{ matrix.rust-version }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust-version }}
        override: true

    - name: Regenerate Cargo.lock
      run: cargo generate-lockfile --manifest-path rust/Cargo.toml

    - name: Install Maturin
      run: pip install maturin

    - name: Build Wheels
      run: |
        mkdir -p target/wheels
        maturin build --release --out target/wheels
        echo "Built wheels:"
        ls -la target/wheels/

    - name: Upload Built Wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.python-version }}-${{ matrix.rust-version }}
        path: target/wheels/*.whl

  install-tests:
    needs: build-package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
    - uses: actions/checkout@v4

    - name: Download Built Wheels
      uses: actions/download-artifact@v4
      with:
        name: wheels-${{ matrix.python-version }}-${{ matrix.rust-version }}
        path: target/wheels

    - name: List Downloaded Wheels
      run: |
        echo "Downloaded wheels:"
        ls -l target/wheels/

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Test Installability
      run: |
        python -m pip install -v --no-cache-dir target/wheels/sentinel1decoder-0.1.0-cp${{ matrix.python-version == '3.8' && '38' || matrix.python-version == '3.9' && '39' || matrix.python-version == '3.10' && '310' || '311' }}-cp${{ matrix.python-version == '3.8' && '38' || matrix.python-version == '3.9' && '39' || matrix.python-version == '3.10' && '310' || '311' }}-manylinux_2_34_x86_64.whl

    - name: Test Imports
      run: |
        python -c "from sentinel1decoder import Level0Decoder, Level0File"
        python -c "import sentinel1decoder; print(sentinel1decoder.__version__)"
