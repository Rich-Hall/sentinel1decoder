name: CI

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  container-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build and test in container
      run: |
        docker build -t sentinel1-dev .
        docker run --rm sentinel1-dev pytest tests/ -v

  build-package:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Rust
      run: |
        curl https://sh.rustup.rs -sSf | sh -s -- -y
        source $HOME/.cargo/env

    - name: Install Maturin
      run: pip install maturin

    - name: Build Wheels
      run: |
        mkdir -p target/wheels
        maturin build --release --out target/wheels

    - name: Upload Built Wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels
        path: target/wheels/*.whl

  install-tests:
    needs: build-package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
    - uses: actions/checkout@v4

    - name: Download Built Wheels
      uses: actions/download-artifact@v4
      with:
        name: wheels
        path: target/wheels

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Upgrade pip
      run: python -m pip install --upgrade pip

    - name: Test Installability
      run: |
        python -m pip install -v --no-cache-dir target/wheels/sentinel1decoder-*cp${{ matrix.python-version == '3.8' && '38' || matrix.python-version == '3.9' && '39' || matrix.python-version == '3.10' && '310' || '311' }}*.whl

    - name: Test Imports
      run: |
        python -c "from sentinel1decoder import Level0Decoder, Level0File"
        python -c "import sentinel1decoder; print(sentinel1decoder.__version__)"

  lint-and-precommit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pre-commit
        pip install -r requirements-dev.txt

    - name: Run Pre-commit Checks
      run: pre-commit run --all-files
